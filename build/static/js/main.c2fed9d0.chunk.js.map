{"version":3,"sources":["components/Task/Task.module.sass","components/NewTask/NewTask.module.sass","components/Counter/Counter.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/NewTask/NewTask.jsx","components/App/App.jsx","index.js","components/App/App.module.sass","components/TaskList/TaskList.module.sass"],"names":["module","exports","Counter","props","nameOfClass","className","styles","wrapper","count","Task","type","checked","isDone","onChange","checkbox","text","text_done","removeBtn","onClick","onRemove","crypto","require","TaskList","taskList","tasks","map","task","event","createHash","update","digest","NewTask","onSubmit","name","placeholder","input","value","button","button_small","App","localStorage","getItem","JSON","parse","length","state","handleNewTask","bind","handleTaskChange","handleTaskRemove","preventDefault","this","slice","newTask","target","trim","taskAdded","push","setState","stringify","setItem","removeTaskIndex","i","splice","header","counter","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2fed9d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Task_wrapper__3x8wq\",\"checkbox\":\"Task_checkbox__2iJeF\",\"text\":\"Task_text__1npsv\",\"text_done\":\"Task_text_done__ymTyN\",\"removeBtn\":\"Task_removeBtn__rOA_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewTask_wrapper__1Wqbf\",\"button\":\"NewTask_button__x7Yod\",\"input\":\"NewTask_input__1JsMN\",\"button_small\":\"NewTask_button_small__32rbl\"};","import styles from \"./Counter.module.sass\";\r\n\r\nexport default function Counter(props) {\r\n  let nameOfClass = props.className;\r\n\r\n  if (styles.wrapper) {\r\n    nameOfClass += \" \" + styles.wrapper;\r\n  }\r\n\r\n  return <h3 className={nameOfClass}>{props.count} tasks</h3>;\r\n}\r\n","import styles from \"./Task.module.sass\";\r\n// import trash from '../../icons/trash.svg';\r\n\r\nexport default function Task(props) {\r\n  let nameOfClass = props.className;\r\n  if (styles.wrapper) {\r\n    nameOfClass += \" \" + styles.wrapper;\r\n  }\r\n\r\n  return (\r\n    <div className={nameOfClass}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={props.isDone}\r\n        onChange={props.onChange}\r\n        className={styles.checkbox}\r\n      />\r\n      <p\r\n        className={\r\n          props.isDone ? styles.text + \" \" + styles.text_done : styles.text\r\n        }\r\n      >\r\n        {props.text}\r\n      </p>\r\n      <div className={styles.removeBtn} onClick={props.onRemove}></div>\r\n    </div>\r\n  );\r\n}\r\n","import Task from \"../../components/Task/Task.jsx\";\r\nimport styles from \"./TaskList.module.sass\";\r\n\r\nconst crypto = require(\"crypto\");\r\n\r\nexport default function TaskList(props) {\r\n  let nameOfClass = props.className;\r\n  if (styles.wrapper) {\r\n    nameOfClass += \" \" + styles.wrapper;\r\n  }\r\n\r\n  let tasks = props.tasks;\r\n  let taskList = tasks.map((task) => {\r\n    return (\r\n      <Task\r\n        text={task.text}\r\n        isDone={task.isDone}\r\n        onChange={(event) => props.onChange(task.text)}\r\n        key={crypto.createHash(\"md5\").update(task.text).digest(\"hex\")}\r\n        className={styles.task}\r\n        onRemove={() => props.onRemove(task.text)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className={nameOfClass}>{taskList}</div>;\r\n}\r\n","import styles from \"./NewTask.module.sass\";\r\n\r\nexport default function NewTask(props) {\r\n  let nameOfClass = props.className;\r\n\r\n  if (styles.wrapper) {\r\n    nameOfClass += \" \" + styles.wrapper;\r\n  }\r\n\r\n  return (\r\n    // <div className={nameOfClass}>\r\n    <form onSubmit={props.onSubmit} className={nameOfClass}>\r\n      <input\r\n        name=\"text\"\r\n        type=\"text\"\r\n        placeholder=\"Task\"\r\n        className={styles.input}\r\n      />\r\n      <input type=\"submit\" value=\"Add Task\" className={styles.button} />\r\n      <input\r\n        type=\"submit\"\r\n        value=\"+\"\r\n        className={styles.button + \" \" + styles.button_small}\r\n      />\r\n    </form>\r\n    // </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Counter from \"../Counter/Counter.jsx\";\r\nimport TaskList from \"../TaskList/TaskList.jsx\";\r\nimport NewTask from \"../NewTask/NewTask.jsx\";\r\n\r\nimport styles from \"./App.module.sass\";\r\n\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let tasks = localStorage.getItem(\"tasks\");\r\n    if (tasks == null || tasks === \"\") {\r\n      tasks = [{ text: \"Create to do list\", isDone: false }];\r\n    } else {\r\n      tasks = JSON.parse(tasks);\r\n    }\r\n\r\n    const count = tasks.length;\r\n\r\n    this.state = { count, tasks };\r\n\r\n    this.handleNewTask = this.handleNewTask.bind(this);\r\n    this.handleTaskChange = this.handleTaskChange.bind(this);\r\n    this.handleTaskRemove = this.handleTaskRemove.bind(this);\r\n  }\r\n\r\n  handleNewTask(event) {\r\n    event.preventDefault();\r\n    // event.target.text.value = '';\r\n\r\n    let tasks = this.state.tasks.slice();\r\n    let count = this.state.count;\r\n    const newTask = { text: event.target.text.value.trim(), isDone: false };\r\n    event.target.text.value = \"\";\r\n\r\n    if (newTask.text !== \"\") {\r\n      let taskAdded = false;\r\n\r\n      for (const task of tasks) {\r\n        if (newTask.text === task.text) {\r\n          task.isDone = false;\r\n          taskAdded = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!taskAdded) {\r\n        tasks.push(newTask);\r\n        ++count;\r\n      }\r\n    }\r\n\r\n    this.setState({ count, tasks });\r\n\r\n    tasks = JSON.stringify(tasks);\r\n    localStorage.setItem(\"tasks\", tasks);\r\n  }\r\n\r\n  handleTaskChange(text) {\r\n    let tasks = this.state.tasks.slice();\r\n\r\n    for (const task of tasks) {\r\n      if (task.text === text) {\r\n        task.isDone = !task.isDone;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({ tasks });\r\n\r\n    tasks = JSON.stringify(tasks);\r\n    localStorage.setItem(\"tasks\", tasks);\r\n  }\r\n\r\n  handleTaskRemove(text) {\r\n    let tasks = this.state.tasks.slice();\r\n\r\n    let removeTaskIndex;\r\n    for (let i = 0; i < tasks.length; ++i) {\r\n      if (tasks[i].text === text) {\r\n        removeTaskIndex = i;\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    tasks.splice(removeTaskIndex, 1);\r\n    const count = this.state.count - 1;\r\n\r\n    this.setState({ tasks, count });\r\n\r\n    tasks = JSON.stringify(tasks);\r\n    localStorage.setItem(\"tasks\", tasks);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.header}>To Do List</h1>\r\n        <Counter count={this.state.count} className={styles.counter} />\r\n        <NewTask onSubmit={this.handleNewTask} className={styles.newTask} />\r\n        <TaskList\r\n          tasks={this.state.tasks}\r\n          onChange={(text) => this.handleTaskChange(text)}\r\n          className={styles.taskList}\r\n          onRemove={this.handleTaskRemove}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { App as default };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from './components/App/App.jsx';\r\nimport './index.css'\r\n/*import \"./style.sass\";\r\nimport Counter from \"./Counter/Counter.js\";\r\nimport TaskList from \"./components/components/TaskList/TaskList.js\";\r\nimport NewTask from \"./components/NewTask/NewTask.js\";*/\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__34f1p\",\"header\":\"App_header__2Fl2F\",\"counter\":\"App_counter__3poH7\",\"taskList\":\"App_taskList__SEahh\",\"newTask\":\"App_newTask__2hRwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TaskList_wrapper__1SMhu\",\"task\":\"TaskList_task__1UawH\"};"],"sourceRoot":""}